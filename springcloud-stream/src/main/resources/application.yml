server:
  port: 8070
spring:
  application:
    name: springcloud-stream
  kafka:
   #  bootstrap-servers: 127.0.0.1:9091,127.0.0.1:9092,127.0.0.1:9093
   producer:
     key-serializer: org.apache.kafka.common.serialization.StringSerializer
     value-serializer: liuhy.springcloud.stream.message.ObjectSerializer
   consumer:
     key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
     value-deserializer: liuhy.springcloud.stream.message.ObjectDeserializer
  cloud:
    stream:
      kafka:
        binder:
          brokers: 127.0.0.1:9091,127.0.0.1:9092,127.0.0.1:9093
          min-partition-count: 1
          auto-create-topics: true
      bindings:
        myInput:
          destination: springstream-topic #指定输入通道对应的主题名
          group: stream #指定该应用实例属于 stream 消费组
          contentType: application/json
          consumer:
            #通过该参数开启消费者分区功能
            partitioned: true
        myOutput:
          destination: springstream-topic #指定输出通道对应的主题名
          producer:
            #header-mode: raw
            useNativeEncoding: true
            #通过该参数指定了分区键的表达式规则，可以根据实际的输出消息规则配置 SpEL 来生成合适的分区键
            partitionKeyExpression: payload
            partitionCount: 1
      #该参数指定了当前消费者的总实例数量
      instance-count: 1
      #该参数设置了当前实例的索引号，从 0 开始，最大值为 spring.cloud.stream.instance-count 参数 - 1
      instance-index: 0
